// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos/ClientSocketMessages.proto

#include "Protos/ClientSocketMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class MessageFromClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageFromClient>
      _instance;
  const ::ArduinoAction* arduinoaction_;
  const ::WebClientAction* webclientaction_;
} _MessageFromClient_default_instance_;
class ArduinoActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArduinoAction>
      _instance;
  const ::ArduinoJoin* arduinojoin_;
  const ::ArduinoWorkoutAction* arduinoworkoutaction_;
} _ArduinoAction_default_instance_;
class ArduinoJoinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArduinoJoin>
      _instance;
} _ArduinoJoin_default_instance_;
class LogoutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Logout>
      _instance;
} _Logout_default_instance_;
class SetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Set>
      _instance;
} _Set_default_instance_;
class ArduinoWorkoutActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArduinoWorkoutAction>
      _instance;
} _ArduinoWorkoutAction_default_instance_;
class XtendDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Xtend>
      _instance;
} _Xtend_default_instance_;
class WebClientActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebClientAction>
      _instance;
  const ::WebClientActionJoin* webclientactionjoin_;
} _WebClientAction_default_instance_;
class WebClientActionJoinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WebClientActionJoin>
      _instance;
} _WebClientActionJoin_default_instance_;
namespace protobuf_Protos_2fClientSocketMessages_2eproto {
void InitDefaultsMessageFromClientImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoAction();
  protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsWebClientAction();
  {
    void* ptr = &::_MessageFromClient_default_instance_;
    new (ptr) ::MessageFromClient();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MessageFromClient::InitAsDefaultInstance();
}

void InitDefaultsMessageFromClient() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageFromClientImpl);
}

void InitDefaultsArduinoActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoJoin();
  protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoWorkoutAction();
  {
    void* ptr = &::_ArduinoAction_default_instance_;
    new (ptr) ::ArduinoAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArduinoAction::InitAsDefaultInstance();
}

void InitDefaultsArduinoAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArduinoActionImpl);
}

void InitDefaultsArduinoJoinImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ArduinoJoin_default_instance_;
    new (ptr) ::ArduinoJoin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArduinoJoin::InitAsDefaultInstance();
}

void InitDefaultsArduinoJoin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArduinoJoinImpl);
}

void InitDefaultsLogoutImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Logout_default_instance_;
    new (ptr) ::Logout();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Logout::InitAsDefaultInstance();
}

void InitDefaultsLogout() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogoutImpl);
}

void InitDefaultsSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Set_default_instance_;
    new (ptr) ::Set();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Set::InitAsDefaultInstance();
}

void InitDefaultsSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetImpl);
}

void InitDefaultsArduinoWorkoutActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ArduinoWorkoutAction_default_instance_;
    new (ptr) ::ArduinoWorkoutAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArduinoWorkoutAction::InitAsDefaultInstance();
}

void InitDefaultsArduinoWorkoutAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArduinoWorkoutActionImpl);
}

void InitDefaultsXtendImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Xtend_default_instance_;
    new (ptr) ::Xtend();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Xtend::InitAsDefaultInstance();
}

void InitDefaultsXtend() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsXtendImpl);
}

void InitDefaultsWebClientActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsWebClientActionJoin();
  {
    void* ptr = &::_WebClientAction_default_instance_;
    new (ptr) ::WebClientAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WebClientAction::InitAsDefaultInstance();
}

void InitDefaultsWebClientAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWebClientActionImpl);
}

void InitDefaultsWebClientActionJoinImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_WebClientActionJoin_default_instance_;
    new (ptr) ::WebClientActionJoin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WebClientActionJoin::InitAsDefaultInstance();
}

void InitDefaultsWebClientActionJoin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWebClientActionJoinImpl);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageFromClient, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageFromClient, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageFromClient, clienttype_),
  offsetof(::MessageFromClientDefaultTypeInternal, arduinoaction_),
  offsetof(::MessageFromClientDefaultTypeInternal, webclientaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MessageFromClient, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoAction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ArduinoActionDefaultTypeInternal, arduinojoin_),
  offsetof(::ArduinoActionDefaultTypeInternal, arduinoworkoutaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoAction, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoJoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoJoin, arduinoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoJoin, rfidcard_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Logout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Logout, rfidcardno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Logout, machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Logout, set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Logout, resttimer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Set, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Set, set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Set, resttimer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, powercontract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, weight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, contract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, rfidcardno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoWorkoutAction, machine_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Xtend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Xtend, xtend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Xtend, powerxtend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WebClientAction, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WebClientAction, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::WebClientActionDefaultTypeInternal, webclientactionjoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WebClientAction, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WebClientActionJoin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::WebClientActionJoin, rfidcardno_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MessageFromClient)},
  { 9, -1, sizeof(::ArduinoAction)},
  { 17, -1, sizeof(::ArduinoJoin)},
  { 24, -1, sizeof(::Logout)},
  { 33, -1, sizeof(::Set)},
  { 40, -1, sizeof(::ArduinoWorkoutAction)},
  { 52, -1, sizeof(::Xtend)},
  { 59, -1, sizeof(::WebClientAction)},
  { 66, -1, sizeof(::WebClientActionJoin)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MessageFromClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ArduinoAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ArduinoJoin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Logout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Set_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ArduinoWorkoutAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Xtend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WebClientAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_WebClientActionJoin_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Protos/ClientSocketMessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!Protos/ClientSocketMessages.proto\"\225\001\n\021"
      "MessageFromClient\022\037\n\nclientType\030\001 \001(\0162\013."
      "ClientType\022\'\n\rarduinoAction\030\002 \001(\0132\016.Ardu"
      "inoActionH\000\022+\n\017webClientAction\030\003 \001(\0132\020.W"
      "ebClientActionH\000B\t\n\007message\"v\n\rArduinoAc"
      "tion\022#\n\013arduinoJoin\030\001 \001(\0132\014.ArduinoJoinH"
      "\000\0225\n\024arduinoWorkoutAction\030\002 \001(\0132\025.Arduin"
      "oWorkoutActionH\000B\t\n\007message\"2\n\013ArduinoJo"
      "in\022\021\n\tarduinoId\030\001 \001(\005\022\020\n\010rfIdCard\030\002 \001(\005\""
      "M\n\006Logout\022\022\n\nrfIdCardNo\030\001 \001(\005\022\017\n\007machine"
      "\030\002 \001(\005\022\013\n\003set\030\003 \001(\005\022\021\n\trestTimer\030\004 \001(\005\"%"
      "\n\003Set\022\013\n\003set\030\001 \001(\005\022\021\n\trestTimer\030\002 \001(\005\"\214\001"
      "\n\024ArduinoWorkoutAction\022\t\n\001n\030\001 \001(\005\022\025\n\rpow"
      "erContract\030\002 \001(\005\022\016\n\006weight\030\003 \001(\005\022\013\n\003set\030"
      "\004 \001(\005\022\020\n\010contract\030\005 \001(\005\022\022\n\nrfIdCardNo\030\006 "
      "\001(\005\022\017\n\007machine\030\007 \001(\005\"*\n\005Xtend\022\r\n\005xtend\030\001"
      " \001(\005\022\022\n\npowerXtend\030\002 \001(\005\"Q\n\017WebClientAct"
      "ion\0223\n\023webClientActionJoin\030\001 \001(\0132\024.WebCl"
      "ientActionJoinH\000B\t\n\007message\")\n\023WebClient"
      "ActionJoin\022\022\n\nrfIdCardNo\030\001 \001(\005*0\n\nClient"
      "Type\022\022\n\016ARDUINO_CLIENT\020\000\022\016\n\nWEB_CLIENT\020\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 848);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protos/ClientSocketMessages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Protos_2fClientSocketMessages_2eproto
const ::google::protobuf::EnumDescriptor* ClientType_descriptor() {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protos_2fClientSocketMessages_2eproto::file_level_enum_descriptors[0];
}
bool ClientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MessageFromClient::InitAsDefaultInstance() {
  ::_MessageFromClient_default_instance_.arduinoaction_ = const_cast< ::ArduinoAction*>(
      ::ArduinoAction::internal_default_instance());
  ::_MessageFromClient_default_instance_.webclientaction_ = const_cast< ::WebClientAction*>(
      ::WebClientAction::internal_default_instance());
}
void MessageFromClient::set_allocated_arduinoaction(::ArduinoAction* arduinoaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (arduinoaction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arduinoaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arduinoaction, submessage_arena);
    }
    set_has_arduinoaction();
    message_.arduinoaction_ = arduinoaction;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageFromClient.arduinoAction)
}
void MessageFromClient::set_allocated_webclientaction(::WebClientAction* webclientaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (webclientaction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      webclientaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, webclientaction, submessage_arena);
    }
    set_has_webclientaction();
    message_.webclientaction_ = webclientaction;
  }
  // @@protoc_insertion_point(field_set_allocated:MessageFromClient.webClientAction)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageFromClient::kClientTypeFieldNumber;
const int MessageFromClient::kArduinoActionFieldNumber;
const int MessageFromClient::kWebClientActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageFromClient::MessageFromClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsMessageFromClient();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageFromClient)
}
MessageFromClient::MessageFromClient(const MessageFromClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clienttype_ = from.clienttype_;
  clear_has_message();
  switch (from.message_case()) {
    case kArduinoAction: {
      mutable_arduinoaction()->::ArduinoAction::MergeFrom(from.arduinoaction());
      break;
    }
    case kWebClientAction: {
      mutable_webclientaction()->::WebClientAction::MergeFrom(from.webclientaction());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MessageFromClient)
}

void MessageFromClient::SharedCtor() {
  clienttype_ = 0;
  clear_has_message();
  _cached_size_ = 0;
}

MessageFromClient::~MessageFromClient() {
  // @@protoc_insertion_point(destructor:MessageFromClient)
  SharedDtor();
}

void MessageFromClient::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void MessageFromClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageFromClient::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageFromClient& MessageFromClient::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsMessageFromClient();
  return *internal_default_instance();
}

MessageFromClient* MessageFromClient::New(::google::protobuf::Arena* arena) const {
  MessageFromClient* n = new MessageFromClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageFromClient::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:MessageFromClient)
  switch (message_case()) {
    case kArduinoAction: {
      delete message_.arduinoaction_;
      break;
    }
    case kWebClientAction: {
      delete message_.webclientaction_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void MessageFromClient::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageFromClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clienttype_ = 0;
  clear_message();
  _internal_metadata_.Clear();
}

bool MessageFromClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageFromClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ClientType clientType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_clienttype(static_cast< ::ClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ArduinoAction arduinoAction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arduinoaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .WebClientAction webClientAction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_webclientaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageFromClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageFromClient)
  return false;
#undef DO_
}

void MessageFromClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageFromClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientType clientType = 1;
  if (this->clienttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->clienttype(), output);
  }

  // .ArduinoAction arduinoAction = 2;
  if (has_arduinoaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *message_.arduinoaction_, output);
  }

  // .WebClientAction webClientAction = 3;
  if (has_webclientaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *message_.webclientaction_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageFromClient)
}

::google::protobuf::uint8* MessageFromClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageFromClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientType clientType = 1;
  if (this->clienttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->clienttype(), target);
  }

  // .ArduinoAction arduinoAction = 2;
  if (has_arduinoaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *message_.arduinoaction_, deterministic, target);
  }

  // .WebClientAction webClientAction = 3;
  if (has_webclientaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *message_.webclientaction_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageFromClient)
  return target;
}

size_t MessageFromClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageFromClient)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ClientType clientType = 1;
  if (this->clienttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->clienttype());
  }

  switch (message_case()) {
    // .ArduinoAction arduinoAction = 2;
    case kArduinoAction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.arduinoaction_);
      break;
    }
    // .WebClientAction webClientAction = 3;
    case kWebClientAction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.webclientaction_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageFromClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageFromClient)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageFromClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageFromClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageFromClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageFromClient)
    MergeFrom(*source);
  }
}

void MessageFromClient::MergeFrom(const MessageFromClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageFromClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clienttype() != 0) {
    set_clienttype(from.clienttype());
  }
  switch (from.message_case()) {
    case kArduinoAction: {
      mutable_arduinoaction()->::ArduinoAction::MergeFrom(from.arduinoaction());
      break;
    }
    case kWebClientAction: {
      mutable_webclientaction()->::WebClientAction::MergeFrom(from.webclientaction());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void MessageFromClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageFromClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageFromClient::CopyFrom(const MessageFromClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageFromClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageFromClient::IsInitialized() const {
  return true;
}

void MessageFromClient::Swap(MessageFromClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageFromClient::InternalSwap(MessageFromClient* other) {
  using std::swap;
  swap(clienttype_, other->clienttype_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageFromClient::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArduinoAction::InitAsDefaultInstance() {
  ::_ArduinoAction_default_instance_.arduinojoin_ = const_cast< ::ArduinoJoin*>(
      ::ArduinoJoin::internal_default_instance());
  ::_ArduinoAction_default_instance_.arduinoworkoutaction_ = const_cast< ::ArduinoWorkoutAction*>(
      ::ArduinoWorkoutAction::internal_default_instance());
}
void ArduinoAction::set_allocated_arduinojoin(::ArduinoJoin* arduinojoin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (arduinojoin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arduinojoin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arduinojoin, submessage_arena);
    }
    set_has_arduinojoin();
    message_.arduinojoin_ = arduinojoin;
  }
  // @@protoc_insertion_point(field_set_allocated:ArduinoAction.arduinoJoin)
}
void ArduinoAction::set_allocated_arduinoworkoutaction(::ArduinoWorkoutAction* arduinoworkoutaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (arduinoworkoutaction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arduinoworkoutaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arduinoworkoutaction, submessage_arena);
    }
    set_has_arduinoworkoutaction();
    message_.arduinoworkoutaction_ = arduinoworkoutaction;
  }
  // @@protoc_insertion_point(field_set_allocated:ArduinoAction.arduinoWorkoutAction)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArduinoAction::kArduinoJoinFieldNumber;
const int ArduinoAction::kArduinoWorkoutActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArduinoAction::ArduinoAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArduinoAction)
}
ArduinoAction::ArduinoAction(const ArduinoAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kArduinoJoin: {
      mutable_arduinojoin()->::ArduinoJoin::MergeFrom(from.arduinojoin());
      break;
    }
    case kArduinoWorkoutAction: {
      mutable_arduinoworkoutaction()->::ArduinoWorkoutAction::MergeFrom(from.arduinoworkoutaction());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ArduinoAction)
}

void ArduinoAction::SharedCtor() {
  clear_has_message();
  _cached_size_ = 0;
}

ArduinoAction::~ArduinoAction() {
  // @@protoc_insertion_point(destructor:ArduinoAction)
  SharedDtor();
}

void ArduinoAction::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void ArduinoAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArduinoAction::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArduinoAction& ArduinoAction::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoAction();
  return *internal_default_instance();
}

ArduinoAction* ArduinoAction::New(::google::protobuf::Arena* arena) const {
  ArduinoAction* n = new ArduinoAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArduinoAction::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:ArduinoAction)
  switch (message_case()) {
    case kArduinoJoin: {
      delete message_.arduinojoin_;
      break;
    }
    case kArduinoWorkoutAction: {
      delete message_.arduinoworkoutaction_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void ArduinoAction::Clear() {
// @@protoc_insertion_point(message_clear_start:ArduinoAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear();
}

bool ArduinoAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArduinoAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ArduinoJoin arduinoJoin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arduinojoin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ArduinoWorkoutAction arduinoWorkoutAction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arduinoworkoutaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArduinoAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArduinoAction)
  return false;
#undef DO_
}

void ArduinoAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArduinoAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArduinoJoin arduinoJoin = 1;
  if (has_arduinojoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_.arduinojoin_, output);
  }

  // .ArduinoWorkoutAction arduinoWorkoutAction = 2;
  if (has_arduinoworkoutaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *message_.arduinoworkoutaction_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ArduinoAction)
}

::google::protobuf::uint8* ArduinoAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArduinoAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArduinoJoin arduinoJoin = 1;
  if (has_arduinojoin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *message_.arduinojoin_, deterministic, target);
  }

  // .ArduinoWorkoutAction arduinoWorkoutAction = 2;
  if (has_arduinoworkoutaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *message_.arduinoworkoutaction_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArduinoAction)
  return target;
}

size_t ArduinoAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArduinoAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_case()) {
    // .ArduinoJoin arduinoJoin = 1;
    case kArduinoJoin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.arduinojoin_);
      break;
    }
    // .ArduinoWorkoutAction arduinoWorkoutAction = 2;
    case kArduinoWorkoutAction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.arduinoworkoutaction_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArduinoAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArduinoAction)
  GOOGLE_DCHECK_NE(&from, this);
  const ArduinoAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArduinoAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArduinoAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArduinoAction)
    MergeFrom(*source);
  }
}

void ArduinoAction::MergeFrom(const ArduinoAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArduinoAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kArduinoJoin: {
      mutable_arduinojoin()->::ArduinoJoin::MergeFrom(from.arduinojoin());
      break;
    }
    case kArduinoWorkoutAction: {
      mutable_arduinoworkoutaction()->::ArduinoWorkoutAction::MergeFrom(from.arduinoworkoutaction());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void ArduinoAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArduinoAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArduinoAction::CopyFrom(const ArduinoAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArduinoAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArduinoAction::IsInitialized() const {
  return true;
}

void ArduinoAction::Swap(ArduinoAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArduinoAction::InternalSwap(ArduinoAction* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArduinoAction::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArduinoJoin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArduinoJoin::kArduinoIdFieldNumber;
const int ArduinoJoin::kRfIdCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArduinoJoin::ArduinoJoin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoJoin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArduinoJoin)
}
ArduinoJoin::ArduinoJoin(const ArduinoJoin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&arduinoid_, &from.arduinoid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rfidcard_) -
    reinterpret_cast<char*>(&arduinoid_)) + sizeof(rfidcard_));
  // @@protoc_insertion_point(copy_constructor:ArduinoJoin)
}

void ArduinoJoin::SharedCtor() {
  ::memset(&arduinoid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rfidcard_) -
      reinterpret_cast<char*>(&arduinoid_)) + sizeof(rfidcard_));
  _cached_size_ = 0;
}

ArduinoJoin::~ArduinoJoin() {
  // @@protoc_insertion_point(destructor:ArduinoJoin)
  SharedDtor();
}

void ArduinoJoin::SharedDtor() {
}

void ArduinoJoin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArduinoJoin::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArduinoJoin& ArduinoJoin::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoJoin();
  return *internal_default_instance();
}

ArduinoJoin* ArduinoJoin::New(::google::protobuf::Arena* arena) const {
  ArduinoJoin* n = new ArduinoJoin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArduinoJoin::Clear() {
// @@protoc_insertion_point(message_clear_start:ArduinoJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&arduinoid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rfidcard_) -
      reinterpret_cast<char*>(&arduinoid_)) + sizeof(rfidcard_));
  _internal_metadata_.Clear();
}

bool ArduinoJoin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArduinoJoin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 arduinoId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arduinoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rfIdCard = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rfidcard_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArduinoJoin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArduinoJoin)
  return false;
#undef DO_
}

void ArduinoJoin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArduinoJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 arduinoId = 1;
  if (this->arduinoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->arduinoid(), output);
  }

  // int32 rfIdCard = 2;
  if (this->rfidcard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rfidcard(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ArduinoJoin)
}

::google::protobuf::uint8* ArduinoJoin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArduinoJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 arduinoId = 1;
  if (this->arduinoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->arduinoid(), target);
  }

  // int32 rfIdCard = 2;
  if (this->rfidcard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rfidcard(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArduinoJoin)
  return target;
}

size_t ArduinoJoin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArduinoJoin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 arduinoId = 1;
  if (this->arduinoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arduinoid());
  }

  // int32 rfIdCard = 2;
  if (this->rfidcard() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rfidcard());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArduinoJoin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArduinoJoin)
  GOOGLE_DCHECK_NE(&from, this);
  const ArduinoJoin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArduinoJoin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArduinoJoin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArduinoJoin)
    MergeFrom(*source);
  }
}

void ArduinoJoin::MergeFrom(const ArduinoJoin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArduinoJoin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arduinoid() != 0) {
    set_arduinoid(from.arduinoid());
  }
  if (from.rfidcard() != 0) {
    set_rfidcard(from.rfidcard());
  }
}

void ArduinoJoin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArduinoJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArduinoJoin::CopyFrom(const ArduinoJoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArduinoJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArduinoJoin::IsInitialized() const {
  return true;
}

void ArduinoJoin::Swap(ArduinoJoin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArduinoJoin::InternalSwap(ArduinoJoin* other) {
  using std::swap;
  swap(arduinoid_, other->arduinoid_);
  swap(rfidcard_, other->rfidcard_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArduinoJoin::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Logout::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Logout::kRfIdCardNoFieldNumber;
const int Logout::kMachineFieldNumber;
const int Logout::kSetFieldNumber;
const int Logout::kRestTimerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Logout::Logout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsLogout();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Logout)
}
Logout::Logout(const Logout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rfidcardno_, &from.rfidcardno_,
    static_cast<size_t>(reinterpret_cast<char*>(&resttimer_) -
    reinterpret_cast<char*>(&rfidcardno_)) + sizeof(resttimer_));
  // @@protoc_insertion_point(copy_constructor:Logout)
}

void Logout::SharedCtor() {
  ::memset(&rfidcardno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resttimer_) -
      reinterpret_cast<char*>(&rfidcardno_)) + sizeof(resttimer_));
  _cached_size_ = 0;
}

Logout::~Logout() {
  // @@protoc_insertion_point(destructor:Logout)
  SharedDtor();
}

void Logout::SharedDtor() {
}

void Logout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Logout::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Logout& Logout::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsLogout();
  return *internal_default_instance();
}

Logout* Logout::New(::google::protobuf::Arena* arena) const {
  Logout* n = new Logout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Logout::Clear() {
// @@protoc_insertion_point(message_clear_start:Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rfidcardno_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resttimer_) -
      reinterpret_cast<char*>(&rfidcardno_)) + sizeof(resttimer_));
  _internal_metadata_.Clear();
}

bool Logout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Logout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rfIdCardNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rfidcardno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 machine = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 set = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 restTimer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resttimer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Logout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Logout)
  return false;
#undef DO_
}

void Logout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rfidcardno(), output);
  }

  // int32 machine = 2;
  if (this->machine() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->machine(), output);
  }

  // int32 set = 3;
  if (this->set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->set(), output);
  }

  // int32 restTimer = 4;
  if (this->resttimer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->resttimer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Logout)
}

::google::protobuf::uint8* Logout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Logout)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rfidcardno(), target);
  }

  // int32 machine = 2;
  if (this->machine() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->machine(), target);
  }

  // int32 set = 3;
  if (this->set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->set(), target);
  }

  // int32 restTimer = 4;
  if (this->resttimer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->resttimer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Logout)
  return target;
}

size_t Logout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Logout)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rfidcardno());
  }

  // int32 machine = 2;
  if (this->machine() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->machine());
  }

  // int32 set = 3;
  if (this->set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->set());
  }

  // int32 restTimer = 4;
  if (this->resttimer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resttimer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Logout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Logout)
  GOOGLE_DCHECK_NE(&from, this);
  const Logout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Logout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Logout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Logout)
    MergeFrom(*source);
  }
}

void Logout::MergeFrom(const Logout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Logout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rfidcardno() != 0) {
    set_rfidcardno(from.rfidcardno());
  }
  if (from.machine() != 0) {
    set_machine(from.machine());
  }
  if (from.set() != 0) {
    set_set(from.set());
  }
  if (from.resttimer() != 0) {
    set_resttimer(from.resttimer());
  }
}

void Logout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Logout::CopyFrom(const Logout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Logout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Logout::IsInitialized() const {
  return true;
}

void Logout::Swap(Logout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Logout::InternalSwap(Logout* other) {
  using std::swap;
  swap(rfidcardno_, other->rfidcardno_);
  swap(machine_, other->machine_);
  swap(set_, other->set_);
  swap(resttimer_, other->resttimer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Logout::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Set::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Set::kSetFieldNumber;
const int Set::kRestTimerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Set::Set()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Set)
}
Set::Set(const Set& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&set_, &from.set_,
    static_cast<size_t>(reinterpret_cast<char*>(&resttimer_) -
    reinterpret_cast<char*>(&set_)) + sizeof(resttimer_));
  // @@protoc_insertion_point(copy_constructor:Set)
}

void Set::SharedCtor() {
  ::memset(&set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resttimer_) -
      reinterpret_cast<char*>(&set_)) + sizeof(resttimer_));
  _cached_size_ = 0;
}

Set::~Set() {
  // @@protoc_insertion_point(destructor:Set)
  SharedDtor();
}

void Set::SharedDtor() {
}

void Set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Set::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Set& Set::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsSet();
  return *internal_default_instance();
}

Set* Set::New(::google::protobuf::Arena* arena) const {
  Set* n = new Set;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Set::Clear() {
// @@protoc_insertion_point(message_clear_start:Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&resttimer_) -
      reinterpret_cast<char*>(&set_)) + sizeof(resttimer_));
  _internal_metadata_.Clear();
}

bool Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Set)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 set = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 restTimer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resttimer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Set)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Set)
  return false;
#undef DO_
}

void Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 set = 1;
  if (this->set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->set(), output);
  }

  // int32 restTimer = 2;
  if (this->resttimer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->resttimer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Set)
}

::google::protobuf::uint8* Set::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Set)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 set = 1;
  if (this->set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->set(), target);
  }

  // int32 restTimer = 2;
  if (this->resttimer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->resttimer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Set)
  return target;
}

size_t Set::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Set)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 set = 1;
  if (this->set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->set());
  }

  // int32 restTimer = 2;
  if (this->resttimer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resttimer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Set::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Set)
  GOOGLE_DCHECK_NE(&from, this);
  const Set* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Set>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Set)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Set)
    MergeFrom(*source);
  }
}

void Set::MergeFrom(const Set& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Set)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.set() != 0) {
    set_set(from.set());
  }
  if (from.resttimer() != 0) {
    set_resttimer(from.resttimer());
  }
}

void Set::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Set::CopyFrom(const Set& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Set)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Set::IsInitialized() const {
  return true;
}

void Set::Swap(Set* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Set::InternalSwap(Set* other) {
  using std::swap;
  swap(set_, other->set_);
  swap(resttimer_, other->resttimer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Set::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArduinoWorkoutAction::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArduinoWorkoutAction::kNFieldNumber;
const int ArduinoWorkoutAction::kPowerContractFieldNumber;
const int ArduinoWorkoutAction::kWeightFieldNumber;
const int ArduinoWorkoutAction::kSetFieldNumber;
const int ArduinoWorkoutAction::kContractFieldNumber;
const int ArduinoWorkoutAction::kRfIdCardNoFieldNumber;
const int ArduinoWorkoutAction::kMachineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArduinoWorkoutAction::ArduinoWorkoutAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoWorkoutAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArduinoWorkoutAction)
}
ArduinoWorkoutAction::ArduinoWorkoutAction(const ArduinoWorkoutAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&n_, &from.n_,
    static_cast<size_t>(reinterpret_cast<char*>(&machine_) -
    reinterpret_cast<char*>(&n_)) + sizeof(machine_));
  // @@protoc_insertion_point(copy_constructor:ArduinoWorkoutAction)
}

void ArduinoWorkoutAction::SharedCtor() {
  ::memset(&n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machine_) -
      reinterpret_cast<char*>(&n_)) + sizeof(machine_));
  _cached_size_ = 0;
}

ArduinoWorkoutAction::~ArduinoWorkoutAction() {
  // @@protoc_insertion_point(destructor:ArduinoWorkoutAction)
  SharedDtor();
}

void ArduinoWorkoutAction::SharedDtor() {
}

void ArduinoWorkoutAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArduinoWorkoutAction::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArduinoWorkoutAction& ArduinoWorkoutAction::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsArduinoWorkoutAction();
  return *internal_default_instance();
}

ArduinoWorkoutAction* ArduinoWorkoutAction::New(::google::protobuf::Arena* arena) const {
  ArduinoWorkoutAction* n = new ArduinoWorkoutAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArduinoWorkoutAction::Clear() {
// @@protoc_insertion_point(message_clear_start:ArduinoWorkoutAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&machine_) -
      reinterpret_cast<char*>(&n_)) + sizeof(machine_));
  _internal_metadata_.Clear();
}

bool ArduinoWorkoutAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArduinoWorkoutAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 powerContract = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powercontract_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 weight = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 set = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 contract = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contract_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rfIdCardNo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rfidcardno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 machine = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArduinoWorkoutAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArduinoWorkoutAction)
  return false;
#undef DO_
}

void ArduinoWorkoutAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArduinoWorkoutAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->n(), output);
  }

  // int32 powerContract = 2;
  if (this->powercontract() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->powercontract(), output);
  }

  // int32 weight = 3;
  if (this->weight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->weight(), output);
  }

  // int32 set = 4;
  if (this->set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->set(), output);
  }

  // int32 contract = 5;
  if (this->contract() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->contract(), output);
  }

  // int32 rfIdCardNo = 6;
  if (this->rfidcardno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rfidcardno(), output);
  }

  // int32 machine = 7;
  if (this->machine() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->machine(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ArduinoWorkoutAction)
}

::google::protobuf::uint8* ArduinoWorkoutAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArduinoWorkoutAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->n(), target);
  }

  // int32 powerContract = 2;
  if (this->powercontract() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->powercontract(), target);
  }

  // int32 weight = 3;
  if (this->weight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->weight(), target);
  }

  // int32 set = 4;
  if (this->set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->set(), target);
  }

  // int32 contract = 5;
  if (this->contract() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->contract(), target);
  }

  // int32 rfIdCardNo = 6;
  if (this->rfidcardno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rfidcardno(), target);
  }

  // int32 machine = 7;
  if (this->machine() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->machine(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArduinoWorkoutAction)
  return target;
}

size_t ArduinoWorkoutAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArduinoWorkoutAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 n = 1;
  if (this->n() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n());
  }

  // int32 powerContract = 2;
  if (this->powercontract() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->powercontract());
  }

  // int32 weight = 3;
  if (this->weight() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weight());
  }

  // int32 set = 4;
  if (this->set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->set());
  }

  // int32 contract = 5;
  if (this->contract() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contract());
  }

  // int32 rfIdCardNo = 6;
  if (this->rfidcardno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rfidcardno());
  }

  // int32 machine = 7;
  if (this->machine() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->machine());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArduinoWorkoutAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArduinoWorkoutAction)
  GOOGLE_DCHECK_NE(&from, this);
  const ArduinoWorkoutAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArduinoWorkoutAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArduinoWorkoutAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArduinoWorkoutAction)
    MergeFrom(*source);
  }
}

void ArduinoWorkoutAction::MergeFrom(const ArduinoWorkoutAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArduinoWorkoutAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n() != 0) {
    set_n(from.n());
  }
  if (from.powercontract() != 0) {
    set_powercontract(from.powercontract());
  }
  if (from.weight() != 0) {
    set_weight(from.weight());
  }
  if (from.set() != 0) {
    set_set(from.set());
  }
  if (from.contract() != 0) {
    set_contract(from.contract());
  }
  if (from.rfidcardno() != 0) {
    set_rfidcardno(from.rfidcardno());
  }
  if (from.machine() != 0) {
    set_machine(from.machine());
  }
}

void ArduinoWorkoutAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArduinoWorkoutAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArduinoWorkoutAction::CopyFrom(const ArduinoWorkoutAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArduinoWorkoutAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArduinoWorkoutAction::IsInitialized() const {
  return true;
}

void ArduinoWorkoutAction::Swap(ArduinoWorkoutAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArduinoWorkoutAction::InternalSwap(ArduinoWorkoutAction* other) {
  using std::swap;
  swap(n_, other->n_);
  swap(powercontract_, other->powercontract_);
  swap(weight_, other->weight_);
  swap(set_, other->set_);
  swap(contract_, other->contract_);
  swap(rfidcardno_, other->rfidcardno_);
  swap(machine_, other->machine_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArduinoWorkoutAction::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Xtend::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Xtend::kXtendFieldNumber;
const int Xtend::kPowerXtendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Xtend::Xtend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsXtend();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Xtend)
}
Xtend::Xtend(const Xtend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xtend_, &from.xtend_,
    static_cast<size_t>(reinterpret_cast<char*>(&powerxtend_) -
    reinterpret_cast<char*>(&xtend_)) + sizeof(powerxtend_));
  // @@protoc_insertion_point(copy_constructor:Xtend)
}

void Xtend::SharedCtor() {
  ::memset(&xtend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&powerxtend_) -
      reinterpret_cast<char*>(&xtend_)) + sizeof(powerxtend_));
  _cached_size_ = 0;
}

Xtend::~Xtend() {
  // @@protoc_insertion_point(destructor:Xtend)
  SharedDtor();
}

void Xtend::SharedDtor() {
}

void Xtend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Xtend::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Xtend& Xtend::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsXtend();
  return *internal_default_instance();
}

Xtend* Xtend::New(::google::protobuf::Arena* arena) const {
  Xtend* n = new Xtend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Xtend::Clear() {
// @@protoc_insertion_point(message_clear_start:Xtend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&xtend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&powerxtend_) -
      reinterpret_cast<char*>(&xtend_)) + sizeof(powerxtend_));
  _internal_metadata_.Clear();
}

bool Xtend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Xtend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 xtend = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xtend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 powerXtend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powerxtend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Xtend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Xtend)
  return false;
#undef DO_
}

void Xtend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Xtend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xtend = 1;
  if (this->xtend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->xtend(), output);
  }

  // int32 powerXtend = 2;
  if (this->powerxtend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->powerxtend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Xtend)
}

::google::protobuf::uint8* Xtend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Xtend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 xtend = 1;
  if (this->xtend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->xtend(), target);
  }

  // int32 powerXtend = 2;
  if (this->powerxtend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->powerxtend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Xtend)
  return target;
}

size_t Xtend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Xtend)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 xtend = 1;
  if (this->xtend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xtend());
  }

  // int32 powerXtend = 2;
  if (this->powerxtend() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->powerxtend());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Xtend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Xtend)
  GOOGLE_DCHECK_NE(&from, this);
  const Xtend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Xtend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Xtend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Xtend)
    MergeFrom(*source);
  }
}

void Xtend::MergeFrom(const Xtend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Xtend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xtend() != 0) {
    set_xtend(from.xtend());
  }
  if (from.powerxtend() != 0) {
    set_powerxtend(from.powerxtend());
  }
}

void Xtend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Xtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Xtend::CopyFrom(const Xtend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Xtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Xtend::IsInitialized() const {
  return true;
}

void Xtend::Swap(Xtend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Xtend::InternalSwap(Xtend* other) {
  using std::swap;
  swap(xtend_, other->xtend_);
  swap(powerxtend_, other->powerxtend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Xtend::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebClientAction::InitAsDefaultInstance() {
  ::_WebClientAction_default_instance_.webclientactionjoin_ = const_cast< ::WebClientActionJoin*>(
      ::WebClientActionJoin::internal_default_instance());
}
void WebClientAction::set_allocated_webclientactionjoin(::WebClientActionJoin* webclientactionjoin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (webclientactionjoin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      webclientactionjoin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, webclientactionjoin, submessage_arena);
    }
    set_has_webclientactionjoin();
    message_.webclientactionjoin_ = webclientactionjoin;
  }
  // @@protoc_insertion_point(field_set_allocated:WebClientAction.webClientActionJoin)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebClientAction::kWebClientActionJoinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebClientAction::WebClientAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsWebClientAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WebClientAction)
}
WebClientAction::WebClientAction(const WebClientAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kWebClientActionJoin: {
      mutable_webclientactionjoin()->::WebClientActionJoin::MergeFrom(from.webclientactionjoin());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:WebClientAction)
}

void WebClientAction::SharedCtor() {
  clear_has_message();
  _cached_size_ = 0;
}

WebClientAction::~WebClientAction() {
  // @@protoc_insertion_point(destructor:WebClientAction)
  SharedDtor();
}

void WebClientAction::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void WebClientAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebClientAction::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebClientAction& WebClientAction::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsWebClientAction();
  return *internal_default_instance();
}

WebClientAction* WebClientAction::New(::google::protobuf::Arena* arena) const {
  WebClientAction* n = new WebClientAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WebClientAction::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:WebClientAction)
  switch (message_case()) {
    case kWebClientActionJoin: {
      delete message_.webclientactionjoin_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void WebClientAction::Clear() {
// @@protoc_insertion_point(message_clear_start:WebClientAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear();
}

bool WebClientAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WebClientAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .WebClientActionJoin webClientActionJoin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_webclientactionjoin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WebClientAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WebClientAction)
  return false;
#undef DO_
}

void WebClientAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WebClientAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .WebClientActionJoin webClientActionJoin = 1;
  if (has_webclientactionjoin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_.webclientactionjoin_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WebClientAction)
}

::google::protobuf::uint8* WebClientAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WebClientAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .WebClientActionJoin webClientActionJoin = 1;
  if (has_webclientactionjoin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *message_.webclientactionjoin_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WebClientAction)
  return target;
}

size_t WebClientAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WebClientAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_case()) {
    // .WebClientActionJoin webClientActionJoin = 1;
    case kWebClientActionJoin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.webclientactionjoin_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebClientAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WebClientAction)
  GOOGLE_DCHECK_NE(&from, this);
  const WebClientAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebClientAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WebClientAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WebClientAction)
    MergeFrom(*source);
  }
}

void WebClientAction::MergeFrom(const WebClientAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WebClientAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kWebClientActionJoin: {
      mutable_webclientactionjoin()->::WebClientActionJoin::MergeFrom(from.webclientactionjoin());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void WebClientAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WebClientAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebClientAction::CopyFrom(const WebClientAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WebClientAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebClientAction::IsInitialized() const {
  return true;
}

void WebClientAction::Swap(WebClientAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebClientAction::InternalSwap(WebClientAction* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WebClientAction::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WebClientActionJoin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WebClientActionJoin::kRfIdCardNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WebClientActionJoin::WebClientActionJoin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsWebClientActionJoin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WebClientActionJoin)
}
WebClientActionJoin::WebClientActionJoin(const WebClientActionJoin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rfidcardno_ = from.rfidcardno_;
  // @@protoc_insertion_point(copy_constructor:WebClientActionJoin)
}

void WebClientActionJoin::SharedCtor() {
  rfidcardno_ = 0;
  _cached_size_ = 0;
}

WebClientActionJoin::~WebClientActionJoin() {
  // @@protoc_insertion_point(destructor:WebClientActionJoin)
  SharedDtor();
}

void WebClientActionJoin::SharedDtor() {
}

void WebClientActionJoin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WebClientActionJoin::descriptor() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WebClientActionJoin& WebClientActionJoin::default_instance() {
  ::protobuf_Protos_2fClientSocketMessages_2eproto::InitDefaultsWebClientActionJoin();
  return *internal_default_instance();
}

WebClientActionJoin* WebClientActionJoin::New(::google::protobuf::Arena* arena) const {
  WebClientActionJoin* n = new WebClientActionJoin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WebClientActionJoin::Clear() {
// @@protoc_insertion_point(message_clear_start:WebClientActionJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rfidcardno_ = 0;
  _internal_metadata_.Clear();
}

bool WebClientActionJoin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WebClientActionJoin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rfIdCardNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rfidcardno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WebClientActionJoin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WebClientActionJoin)
  return false;
#undef DO_
}

void WebClientActionJoin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WebClientActionJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rfidcardno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:WebClientActionJoin)
}

::google::protobuf::uint8* WebClientActionJoin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WebClientActionJoin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rfidcardno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WebClientActionJoin)
  return target;
}

size_t WebClientActionJoin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WebClientActionJoin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rfidcardno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WebClientActionJoin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WebClientActionJoin)
  GOOGLE_DCHECK_NE(&from, this);
  const WebClientActionJoin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WebClientActionJoin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WebClientActionJoin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WebClientActionJoin)
    MergeFrom(*source);
  }
}

void WebClientActionJoin::MergeFrom(const WebClientActionJoin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WebClientActionJoin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rfidcardno() != 0) {
    set_rfidcardno(from.rfidcardno());
  }
}

void WebClientActionJoin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WebClientActionJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WebClientActionJoin::CopyFrom(const WebClientActionJoin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WebClientActionJoin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WebClientActionJoin::IsInitialized() const {
  return true;
}

void WebClientActionJoin::Swap(WebClientActionJoin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WebClientActionJoin::InternalSwap(WebClientActionJoin* other) {
  using std::swap;
  swap(rfidcardno_, other->rfidcardno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WebClientActionJoin::GetMetadata() const {
  protobuf_Protos_2fClientSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fClientSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
