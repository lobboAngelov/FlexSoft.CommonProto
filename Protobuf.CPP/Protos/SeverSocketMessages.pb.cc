// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos/SeverSocketMessages.proto

#include "Protos/SeverSocketMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class TESTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TEST>
      _instance;
} _TEST_default_instance_;
class ServerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage>
      _instance;
  const ::ArduinoConnected* arduinoconnectedmessage_;
  const ::ClientConnected* clientconnectedmessage_;
} _ServerMessage_default_instance_;
class ArduinoConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArduinoConnected>
      _instance;
} _ArduinoConnected_default_instance_;
class ClientConnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientConnected>
      _instance;
} _ClientConnected_default_instance_;
namespace protobuf_Protos_2fSeverSocketMessages_2eproto {
void InitDefaultsTESTImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_TEST_default_instance_;
    new (ptr) ::TEST();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TEST::InitAsDefaultInstance();
}

void InitDefaultsTEST() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTESTImpl);
}

void InitDefaultsServerMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsArduinoConnected();
  protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsClientConnected();
  {
    void* ptr = &::_ServerMessage_default_instance_;
    new (ptr) ::ServerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerMessage::InitAsDefaultInstance();
}

void InitDefaultsServerMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerMessageImpl);
}

void InitDefaultsArduinoConnectedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ArduinoConnected_default_instance_;
    new (ptr) ::ArduinoConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ArduinoConnected::InitAsDefaultInstance();
}

void InitDefaultsArduinoConnected() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArduinoConnectedImpl);
}

void InitDefaultsClientConnectedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClientConnected_default_instance_;
    new (ptr) ::ClientConnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientConnected::InitAsDefaultInstance();
}

void InitDefaultsClientConnected() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientConnectedImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TEST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TEST, number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ServerMessageDefaultTypeInternal, arduinoconnectedmessage_),
  offsetof(::ServerMessageDefaultTypeInternal, clientconnectedmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoConnected, fail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoConnected, arduinoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ArduinoConnected, rfidcardno_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientConnected, rfidcardno_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TEST)},
  { 6, -1, sizeof(::ServerMessage)},
  { 14, -1, sizeof(::ArduinoConnected)},
  { 22, -1, sizeof(::ClientConnected)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TEST_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServerMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ArduinoConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientConnected_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Protos/SeverSocketMessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n Protos/SeverSocketMessages.proto\"\026\n\004TE"
      "ST\022\016\n\006number\030\001 \001(\005\"\204\001\n\rServerMessage\0224\n\027"
      "arduinoConnectedMessage\030\001 \001(\0132\021.ArduinoC"
      "onnectedH\000\0222\n\026clientConnectedMessage\030\002 \001"
      "(\0132\020.ClientConnectedH\000B\t\n\007message\"G\n\020Ard"
      "uinoConnected\022\014\n\004fail\030\001 \001(\010\022\021\n\tarduinoId"
      "\030\002 \001(\005\022\022\n\nrfIdCardNo\030\003 \001(\005\"%\n\017ClientConn"
      "ected\022\022\n\nrfIdCardNo\030\001 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 313);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protos/SeverSocketMessages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Protos_2fSeverSocketMessages_2eproto

// ===================================================================

void TEST::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TEST::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TEST::TEST()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsTEST();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TEST)
}
TEST::TEST(const TEST& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:TEST)
}

void TEST::SharedCtor() {
  number_ = 0;
  _cached_size_ = 0;
}

TEST::~TEST() {
  // @@protoc_insertion_point(destructor:TEST)
  SharedDtor();
}

void TEST::SharedDtor() {
}

void TEST::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TEST::descriptor() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TEST& TEST::default_instance() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsTEST();
  return *internal_default_instance();
}

TEST* TEST::New(::google::protobuf::Arena* arena) const {
  TEST* n = new TEST;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TEST::Clear() {
// @@protoc_insertion_point(message_clear_start:TEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_ = 0;
  _internal_metadata_.Clear();
}

bool TEST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TEST)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TEST)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TEST)
  return false;
#undef DO_
}

void TEST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (this->number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TEST)
}

::google::protobuf::uint8* TEST::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TEST)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (this->number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TEST)
  return target;
}

size_t TEST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TEST)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 number = 1;
  if (this->number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TEST::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TEST)
  GOOGLE_DCHECK_NE(&from, this);
  const TEST* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TEST>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TEST)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TEST)
    MergeFrom(*source);
  }
}

void TEST::MergeFrom(const TEST& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TEST)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number() != 0) {
    set_number(from.number());
  }
}

void TEST::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TEST::CopyFrom(const TEST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TEST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TEST::IsInitialized() const {
  return true;
}

void TEST::Swap(TEST* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TEST::InternalSwap(TEST* other) {
  using std::swap;
  swap(number_, other->number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TEST::GetMetadata() const {
  protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerMessage::InitAsDefaultInstance() {
  ::_ServerMessage_default_instance_.arduinoconnectedmessage_ = const_cast< ::ArduinoConnected*>(
      ::ArduinoConnected::internal_default_instance());
  ::_ServerMessage_default_instance_.clientconnectedmessage_ = const_cast< ::ClientConnected*>(
      ::ClientConnected::internal_default_instance());
}
void ServerMessage::set_allocated_arduinoconnectedmessage(::ArduinoConnected* arduinoconnectedmessage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (arduinoconnectedmessage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arduinoconnectedmessage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arduinoconnectedmessage, submessage_arena);
    }
    set_has_arduinoconnectedmessage();
    message_.arduinoconnectedmessage_ = arduinoconnectedmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.arduinoConnectedMessage)
}
void ServerMessage::set_allocated_clientconnectedmessage(::ClientConnected* clientconnectedmessage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (clientconnectedmessage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clientconnectedmessage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clientconnectedmessage, submessage_arena);
    }
    set_has_clientconnectedmessage();
    message_.clientconnectedmessage_ = clientconnectedmessage;
  }
  // @@protoc_insertion_point(field_set_allocated:ServerMessage.clientConnectedMessage)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage::kArduinoConnectedMessageFieldNumber;
const int ServerMessage::kClientConnectedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage::ServerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsServerMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMessage)
}
ServerMessage::ServerMessage(const ServerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kArduinoConnectedMessage: {
      mutable_arduinoconnectedmessage()->::ArduinoConnected::MergeFrom(from.arduinoconnectedmessage());
      break;
    }
    case kClientConnectedMessage: {
      mutable_clientconnectedmessage()->::ClientConnected::MergeFrom(from.clientconnectedmessage());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ServerMessage)
}

void ServerMessage::SharedCtor() {
  clear_has_message();
  _cached_size_ = 0;
}

ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:ServerMessage)
  SharedDtor();
}

void ServerMessage::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void ServerMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMessage::descriptor() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage& ServerMessage::default_instance() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsServerMessage();
  return *internal_default_instance();
}

ServerMessage* ServerMessage::New(::google::protobuf::Arena* arena) const {
  ServerMessage* n = new ServerMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:ServerMessage)
  switch (message_case()) {
    case kArduinoConnectedMessage: {
      delete message_.arduinoconnectedmessage_;
      break;
    }
    case kClientConnectedMessage: {
      delete message_.clientconnectedmessage_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear();
}

bool ServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ArduinoConnected arduinoConnectedMessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arduinoconnectedmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ClientConnected clientConnectedMessage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clientconnectedmessage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMessage)
  return false;
#undef DO_
}

void ServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArduinoConnected arduinoConnectedMessage = 1;
  if (has_arduinoconnectedmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_.arduinoconnectedmessage_, output);
  }

  // .ClientConnected clientConnectedMessage = 2;
  if (has_clientconnectedmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *message_.clientconnectedmessage_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerMessage)
}

::google::protobuf::uint8* ServerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ArduinoConnected arduinoConnectedMessage = 1;
  if (has_arduinoconnectedmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *message_.arduinoconnectedmessage_, deterministic, target);
  }

  // .ClientConnected clientConnectedMessage = 2;
  if (has_clientconnectedmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *message_.clientconnectedmessage_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerMessage)
  return target;
}

size_t ServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_case()) {
    // .ArduinoConnected arduinoConnectedMessage = 1;
    case kArduinoConnectedMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.arduinoconnectedmessage_);
      break;
    }
    // .ClientConnected clientConnectedMessage = 2;
    case kClientConnectedMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.clientconnectedmessage_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMessage)
    MergeFrom(*source);
  }
}

void ServerMessage::MergeFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kArduinoConnectedMessage: {
      mutable_arduinoconnectedmessage()->::ArduinoConnected::MergeFrom(from.arduinoconnectedmessage());
      break;
    }
    case kClientConnectedMessage: {
      mutable_clientconnectedmessage()->::ClientConnected::MergeFrom(from.clientconnectedmessage());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void ServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage::IsInitialized() const {
  return true;
}

void ServerMessage::Swap(ServerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage::InternalSwap(ServerMessage* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMessage::GetMetadata() const {
  protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArduinoConnected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArduinoConnected::kFailFieldNumber;
const int ArduinoConnected::kArduinoIdFieldNumber;
const int ArduinoConnected::kRfIdCardNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArduinoConnected::ArduinoConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsArduinoConnected();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ArduinoConnected)
}
ArduinoConnected::ArduinoConnected(const ArduinoConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fail_, &from.fail_,
    static_cast<size_t>(reinterpret_cast<char*>(&rfidcardno_) -
    reinterpret_cast<char*>(&fail_)) + sizeof(rfidcardno_));
  // @@protoc_insertion_point(copy_constructor:ArduinoConnected)
}

void ArduinoConnected::SharedCtor() {
  ::memset(&fail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rfidcardno_) -
      reinterpret_cast<char*>(&fail_)) + sizeof(rfidcardno_));
  _cached_size_ = 0;
}

ArduinoConnected::~ArduinoConnected() {
  // @@protoc_insertion_point(destructor:ArduinoConnected)
  SharedDtor();
}

void ArduinoConnected::SharedDtor() {
}

void ArduinoConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArduinoConnected::descriptor() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArduinoConnected& ArduinoConnected::default_instance() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsArduinoConnected();
  return *internal_default_instance();
}

ArduinoConnected* ArduinoConnected::New(::google::protobuf::Arena* arena) const {
  ArduinoConnected* n = new ArduinoConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArduinoConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:ArduinoConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rfidcardno_) -
      reinterpret_cast<char*>(&fail_)) + sizeof(rfidcardno_));
  _internal_metadata_.Clear();
}

bool ArduinoConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ArduinoConnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool fail = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arduinoId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arduinoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rfIdCardNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rfidcardno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ArduinoConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ArduinoConnected)
  return false;
#undef DO_
}

void ArduinoConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ArduinoConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fail = 1;
  if (this->fail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->fail(), output);
  }

  // int32 arduinoId = 2;
  if (this->arduinoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->arduinoid(), output);
  }

  // int32 rfIdCardNo = 3;
  if (this->rfidcardno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rfidcardno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ArduinoConnected)
}

::google::protobuf::uint8* ArduinoConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ArduinoConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fail = 1;
  if (this->fail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->fail(), target);
  }

  // int32 arduinoId = 2;
  if (this->arduinoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->arduinoid(), target);
  }

  // int32 rfIdCardNo = 3;
  if (this->rfidcardno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rfidcardno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ArduinoConnected)
  return target;
}

size_t ArduinoConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ArduinoConnected)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool fail = 1;
  if (this->fail() != 0) {
    total_size += 1 + 1;
  }

  // int32 arduinoId = 2;
  if (this->arduinoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arduinoid());
  }

  // int32 rfIdCardNo = 3;
  if (this->rfidcardno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rfidcardno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArduinoConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ArduinoConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const ArduinoConnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArduinoConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ArduinoConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ArduinoConnected)
    MergeFrom(*source);
  }
}

void ArduinoConnected::MergeFrom(const ArduinoConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ArduinoConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fail() != 0) {
    set_fail(from.fail());
  }
  if (from.arduinoid() != 0) {
    set_arduinoid(from.arduinoid());
  }
  if (from.rfidcardno() != 0) {
    set_rfidcardno(from.rfidcardno());
  }
}

void ArduinoConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ArduinoConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArduinoConnected::CopyFrom(const ArduinoConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ArduinoConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArduinoConnected::IsInitialized() const {
  return true;
}

void ArduinoConnected::Swap(ArduinoConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArduinoConnected::InternalSwap(ArduinoConnected* other) {
  using std::swap;
  swap(fail_, other->fail_);
  swap(arduinoid_, other->arduinoid_);
  swap(rfidcardno_, other->rfidcardno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArduinoConnected::GetMetadata() const {
  protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientConnected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnected::kRfIdCardNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnected::ClientConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsClientConnected();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientConnected)
}
ClientConnected::ClientConnected(const ClientConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rfidcardno_ = from.rfidcardno_;
  // @@protoc_insertion_point(copy_constructor:ClientConnected)
}

void ClientConnected::SharedCtor() {
  rfidcardno_ = 0;
  _cached_size_ = 0;
}

ClientConnected::~ClientConnected() {
  // @@protoc_insertion_point(destructor:ClientConnected)
  SharedDtor();
}

void ClientConnected::SharedDtor() {
}

void ClientConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConnected::descriptor() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientConnected& ClientConnected::default_instance() {
  ::protobuf_Protos_2fSeverSocketMessages_2eproto::InitDefaultsClientConnected();
  return *internal_default_instance();
}

ClientConnected* ClientConnected::New(::google::protobuf::Arena* arena) const {
  ClientConnected* n = new ClientConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rfidcardno_ = 0;
  _internal_metadata_.Clear();
}

bool ClientConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientConnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rfIdCardNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rfidcardno_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientConnected)
  return false;
#undef DO_
}

void ClientConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rfidcardno(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientConnected)
}

::google::protobuf::uint8* ClientConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientConnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rfidcardno(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientConnected)
  return target;
}

size_t ClientConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientConnected)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 rfIdCardNo = 1;
  if (this->rfidcardno() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rfidcardno());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientConnected)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientConnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientConnected)
    MergeFrom(*source);
  }
}

void ClientConnected::MergeFrom(const ClientConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientConnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rfidcardno() != 0) {
    set_rfidcardno(from.rfidcardno());
  }
}

void ClientConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnected::CopyFrom(const ClientConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConnected::IsInitialized() const {
  return true;
}

void ClientConnected::Swap(ClientConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnected::InternalSwap(ClientConnected* other) {
  using std::swap;
  swap(rfidcardno_, other->rfidcardno_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConnected::GetMetadata() const {
  protobuf_Protos_2fSeverSocketMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Protos_2fSeverSocketMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
