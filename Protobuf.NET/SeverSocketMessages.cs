// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/SeverSocketMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Protos/SeverSocketMessages.proto</summary>
public static partial class SeverSocketMessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for Protos/SeverSocketMessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SeverSocketMessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiBQcm90b3MvU2V2ZXJTb2NrZXRNZXNzYWdlcy5wcm90byIWCgRURVNUEg4K",
          "Bm51bWJlchgBIAEoBSKEAQoNU2VydmVyTWVzc2FnZRI0ChdhcmR1aW5vQ29u",
          "bmVjdGVkTWVzc2FnZRgBIAEoCzIRLkFyZHVpbm9Db25uZWN0ZWRIABIyChZj",
          "bGllbnRDb25uZWN0ZWRNZXNzYWdlGAIgASgLMhAuQ2xpZW50Q29ubmVjdGVk",
          "SABCCQoHbWVzc2FnZSJHChBBcmR1aW5vQ29ubmVjdGVkEgwKBGZhaWwYASAB",
          "KAgSEQoJYXJkdWlub0lkGAIgASgFEhIKCnJmSWRDYXJkTm8YAyABKAUiJQoP",
          "Q2xpZW50Q29ubmVjdGVkEhIKCnJmSWRDYXJkTm8YASABKAViBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TEST), global::TEST.Parser, new[]{ "Number" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerMessage), global::ServerMessage.Parser, new[]{ "ArduinoConnectedMessage", "ClientConnectedMessage" }, new[]{ "Message" }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArduinoConnected), global::ArduinoConnected.Parser, new[]{ "Fail", "ArduinoId", "RfIdCardNo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientConnected), global::ClientConnected.Parser, new[]{ "RfIdCardNo" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class TEST : pb::IMessage<TEST> {
  private static readonly pb::MessageParser<TEST> _parser = new pb::MessageParser<TEST>(() => new TEST());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TEST> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SeverSocketMessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TEST() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TEST(TEST other) : this() {
    number_ = other.number_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TEST Clone() {
    return new TEST(this);
  }

  /// <summary>Field number for the "number" field.</summary>
  public const int NumberFieldNumber = 1;
  private int number_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Number {
    get { return number_; }
    set {
      number_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TEST);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TEST other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Number != other.Number) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Number != 0) hash ^= Number.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Number != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Number);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Number != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TEST other) {
    if (other == null) {
      return;
    }
    if (other.Number != 0) {
      Number = other.Number;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Number = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ServerMessage : pb::IMessage<ServerMessage> {
  private static readonly pb::MessageParser<ServerMessage> _parser = new pb::MessageParser<ServerMessage>(() => new ServerMessage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SeverSocketMessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMessage(ServerMessage other) : this() {
    switch (other.MessageCase) {
      case MessageOneofCase.ArduinoConnectedMessage:
        ArduinoConnectedMessage = other.ArduinoConnectedMessage.Clone();
        break;
      case MessageOneofCase.ClientConnectedMessage:
        ClientConnectedMessage = other.ClientConnectedMessage.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerMessage Clone() {
    return new ServerMessage(this);
  }

  /// <summary>Field number for the "arduinoConnectedMessage" field.</summary>
  public const int ArduinoConnectedMessageFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArduinoConnected ArduinoConnectedMessage {
    get { return messageCase_ == MessageOneofCase.ArduinoConnectedMessage ? (global::ArduinoConnected) message_ : null; }
    set {
      message_ = value;
      messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ArduinoConnectedMessage;
    }
  }

  /// <summary>Field number for the "clientConnectedMessage" field.</summary>
  public const int ClientConnectedMessageFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClientConnected ClientConnectedMessage {
    get { return messageCase_ == MessageOneofCase.ClientConnectedMessage ? (global::ClientConnected) message_ : null; }
    set {
      message_ = value;
      messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ClientConnectedMessage;
    }
  }

  private object message_;
  /// <summary>Enum of possible cases for the "message" oneof.</summary>
  public enum MessageOneofCase {
    None = 0,
    ArduinoConnectedMessage = 1,
    ClientConnectedMessage = 2,
  }
  private MessageOneofCase messageCase_ = MessageOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageOneofCase MessageCase {
    get { return messageCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMessage() {
    messageCase_ = MessageOneofCase.None;
    message_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ArduinoConnectedMessage, other.ArduinoConnectedMessage)) return false;
    if (!object.Equals(ClientConnectedMessage, other.ClientConnectedMessage)) return false;
    if (MessageCase != other.MessageCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (messageCase_ == MessageOneofCase.ArduinoConnectedMessage) hash ^= ArduinoConnectedMessage.GetHashCode();
    if (messageCase_ == MessageOneofCase.ClientConnectedMessage) hash ^= ClientConnectedMessage.GetHashCode();
    hash ^= (int) messageCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (messageCase_ == MessageOneofCase.ArduinoConnectedMessage) {
      output.WriteRawTag(10);
      output.WriteMessage(ArduinoConnectedMessage);
    }
    if (messageCase_ == MessageOneofCase.ClientConnectedMessage) {
      output.WriteRawTag(18);
      output.WriteMessage(ClientConnectedMessage);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (messageCase_ == MessageOneofCase.ArduinoConnectedMessage) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArduinoConnectedMessage);
    }
    if (messageCase_ == MessageOneofCase.ClientConnectedMessage) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientConnectedMessage);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerMessage other) {
    if (other == null) {
      return;
    }
    switch (other.MessageCase) {
      case MessageOneofCase.ArduinoConnectedMessage:
        if (ArduinoConnectedMessage == null) {
          ArduinoConnectedMessage = new global::ArduinoConnected();
        }
        ArduinoConnectedMessage.MergeFrom(other.ArduinoConnectedMessage);
        break;
      case MessageOneofCase.ClientConnectedMessage:
        if (ClientConnectedMessage == null) {
          ClientConnectedMessage = new global::ClientConnected();
        }
        ClientConnectedMessage.MergeFrom(other.ClientConnectedMessage);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::ArduinoConnected subBuilder = new global::ArduinoConnected();
          if (messageCase_ == MessageOneofCase.ArduinoConnectedMessage) {
            subBuilder.MergeFrom(ArduinoConnectedMessage);
          }
          input.ReadMessage(subBuilder);
          ArduinoConnectedMessage = subBuilder;
          break;
        }
        case 18: {
          global::ClientConnected subBuilder = new global::ClientConnected();
          if (messageCase_ == MessageOneofCase.ClientConnectedMessage) {
            subBuilder.MergeFrom(ClientConnectedMessage);
          }
          input.ReadMessage(subBuilder);
          ClientConnectedMessage = subBuilder;
          break;
        }
      }
    }
  }

}

public sealed partial class ArduinoConnected : pb::IMessage<ArduinoConnected> {
  private static readonly pb::MessageParser<ArduinoConnected> _parser = new pb::MessageParser<ArduinoConnected>(() => new ArduinoConnected());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArduinoConnected> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SeverSocketMessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoConnected() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoConnected(ArduinoConnected other) : this() {
    fail_ = other.fail_;
    arduinoId_ = other.arduinoId_;
    rfIdCardNo_ = other.rfIdCardNo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArduinoConnected Clone() {
    return new ArduinoConnected(this);
  }

  /// <summary>Field number for the "fail" field.</summary>
  public const int FailFieldNumber = 1;
  private bool fail_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Fail {
    get { return fail_; }
    set {
      fail_ = value;
    }
  }

  /// <summary>Field number for the "arduinoId" field.</summary>
  public const int ArduinoIdFieldNumber = 2;
  private int arduinoId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ArduinoId {
    get { return arduinoId_; }
    set {
      arduinoId_ = value;
    }
  }

  /// <summary>Field number for the "rfIdCardNo" field.</summary>
  public const int RfIdCardNoFieldNumber = 3;
  private int rfIdCardNo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RfIdCardNo {
    get { return rfIdCardNo_; }
    set {
      rfIdCardNo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArduinoConnected);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArduinoConnected other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Fail != other.Fail) return false;
    if (ArduinoId != other.ArduinoId) return false;
    if (RfIdCardNo != other.RfIdCardNo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Fail != false) hash ^= Fail.GetHashCode();
    if (ArduinoId != 0) hash ^= ArduinoId.GetHashCode();
    if (RfIdCardNo != 0) hash ^= RfIdCardNo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Fail != false) {
      output.WriteRawTag(8);
      output.WriteBool(Fail);
    }
    if (ArduinoId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ArduinoId);
    }
    if (RfIdCardNo != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RfIdCardNo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Fail != false) {
      size += 1 + 1;
    }
    if (ArduinoId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArduinoId);
    }
    if (RfIdCardNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RfIdCardNo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArduinoConnected other) {
    if (other == null) {
      return;
    }
    if (other.Fail != false) {
      Fail = other.Fail;
    }
    if (other.ArduinoId != 0) {
      ArduinoId = other.ArduinoId;
    }
    if (other.RfIdCardNo != 0) {
      RfIdCardNo = other.RfIdCardNo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Fail = input.ReadBool();
          break;
        }
        case 16: {
          ArduinoId = input.ReadInt32();
          break;
        }
        case 24: {
          RfIdCardNo = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class ClientConnected : pb::IMessage<ClientConnected> {
  private static readonly pb::MessageParser<ClientConnected> _parser = new pb::MessageParser<ClientConnected>(() => new ClientConnected());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientConnected> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SeverSocketMessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientConnected() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientConnected(ClientConnected other) : this() {
    rfIdCardNo_ = other.rfIdCardNo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientConnected Clone() {
    return new ClientConnected(this);
  }

  /// <summary>Field number for the "rfIdCardNo" field.</summary>
  public const int RfIdCardNoFieldNumber = 1;
  private int rfIdCardNo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RfIdCardNo {
    get { return rfIdCardNo_; }
    set {
      rfIdCardNo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientConnected);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientConnected other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RfIdCardNo != other.RfIdCardNo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RfIdCardNo != 0) hash ^= RfIdCardNo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RfIdCardNo != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RfIdCardNo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RfIdCardNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RfIdCardNo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientConnected other) {
    if (other == null) {
      return;
    }
    if (other.RfIdCardNo != 0) {
      RfIdCardNo = other.RfIdCardNo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RfIdCardNo = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
